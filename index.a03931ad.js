var e=async function e(n){const t="https://en.wikipedia.org/w/api.php?"+new URLSearchParams({origin:"*",action:"parse",page:n,format:"json",prop:"wikitext"}),a=await fetch(t),r=await a.json();if(!r.parse)return null;const i=r.parse.wikitext["*"],o=function(e){const n=/#REDIRECT.+\[\[(.+)]]/.exec(e);return null!==n?n[1]:null}(i);return null!==o?e(o):i};var n=async function(e){const n={action:"query",titles:e,prop:"langlinks",format:"json",lllang:"ja"};let t="https://en.wikipedia.org/w/api.php?origin=*";Object.keys(n).forEach((function(e){t+="&"+e+"="+n[e]}));const a=await fetch(t),r=await a.json(),i=parseInt(Object.keys(r.query.pages)[0]),o=r.query.pages[i].langlinks;return o?o[0]["*"]:null};async function t(e){let t=e;const a=function(e){return[...new Set([...e.matchAll(/\[\[(.+?)]]/g)].map((e=>e[1]))).keys()].map((e=>e.split("|"))).filter((e=>e.length<=2))}(e);for(const[e,r]of a){if(r)continue;const a=await n(e),i=new RegExp(String.raw`\[\[${e}]]`,"g"),o=null===a?`{{ill|${e}|en|${e}}}`:`[[${a}]]`;t=t.replace(i,o)}return t}async function a(a){if("Enter"!==a.key)return;const r=document.querySelector("#article-name").value,i=await n(r);document.querySelector("#langlink").value=i?`${r} => ${i}`:"not found";const o=await e(r);if(document.querySelector("#wikitext").value=o??"not found",null===o)return;const c=await t(o);document.querySelector("#replaced-wikitext").value=c}document.addEventListener("DOMContentLoaded",(()=>{document.querySelector("#article-name").addEventListener("keydown",a)}));
//# sourceMappingURL=index.a03931ad.js.map
