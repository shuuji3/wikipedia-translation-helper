{"mappings":"IAyCAA,iBAzCeC,EAAcC,GAUzB,MAAMC,EAAM,sCACR,IAAIC,gBAAgB,CAChBC,OAAQ,IACRC,OAAQ,QACRC,KAAML,EACNM,OAAQ,OACRC,KAAM,aAGRC,QAAYC,MAAMR,GAClBS,QAAaF,EAAIE,OACvB,IAAKA,EAAKC,MACN,OAAO,KAEX,MAAMC,EAAWF,EAAKC,MAAMC,SAAS,KAE/BC,WAOWD,GACjB,MAAME,EAAK,wBAA2BC,KAAKH,GAC3C,OAAc,OAAVE,EACOA,EAAM,GAEV,KAZqBE,CAAYJ,GACxC,OAA4B,OAAxBC,EACOd,EAAcc,GAElBD,OCGXK,iBAjC6BjB,GAQzB,MAAMkB,EAAS,CACXd,OAAQ,QACRe,OAAQnB,EACRO,KAAM,YACND,OAAQ,OACRc,OAAQ,MAGZ,IAAInB,EAAM,8CACVoB,OAAOC,KAAKJ,GAAQK,SAAQ,SAAUC,GAElCvB,GAAO,IAAMuB,EAAM,IAAMN,EAAOM,MAIpC,MAAMhB,QAAYC,MAAMR,GAClBS,QAAaF,EAAIE,OACjBe,EAASC,SAASL,OAAOC,KAAKZ,EAAKiB,MAAMC,OAAO,IAChDC,EAAYnB,EAAKiB,MAAMC,MAAMH,GAAQI,UAC3C,OAAKA,EAGEA,EAAU,GAAG,KAFT,qBCrBOC,EAAgBlB,GAClC,IAAImB,EAAmBnB,EACvB,MAAMoB,WAPapB,GAEnB,MAAO,IADW,IAAIqB,IAAI,IAAIrB,EAASsB,SAAQ,iBAAkBC,KAAIC,GAAKA,EAAE,MAAKd,QACzDa,KAAIE,GAAQA,EAAKC,MAAM,OAAMC,QAAOC,GAAKA,EAAEC,QAAU,IAK/DC,CAAc9B,GAC5B,IAAK,MAAOZ,EAAa2C,KAAUX,EAAO,CACtC,GAAIW,EACA,SAEJ,MAAMC,QAAiB3B,EAAcjB,GAC/B6C,EAAc,IAAIC,OAAOC,OAAOC,GAAG,OAAOhD,MAAiB,KAC3DiD,EACW,OAAbL,EAAiB,SAAY5C,QAAkBA,MAAc,KAAS4C,MAC1Eb,EAAmBA,EAAiBmB,QAAQL,EAAaI,GAG7D,OAAOlB,iBCjBIoB,EAAaC,GACxB,GAAc,UAAVA,EAAE5B,IACF,OAGJ,MAAMxB,EAAeqD,SAASC,cAAc,iBAAsCC,MAE5EC,QAAiBvC,EAAcjB,GACpCqD,SAASC,cAAc,aAAqCC,MACvDC,EAAQ,GAAMxD,QAAkBwD,IAAa,YAEnD,MAAM5C,QAAiBd,EAAcE,GAIrC,GAHCqD,SAASC,cAAc,aAAqCC,MACvD3C,GAAY,YAED,OAAbA,EACA,OAEJ,MAAMmB,QAAyBD,EAAgBlB,GAC9CyC,SAASC,cAAc,sBAA8CC,MAAQxB,EAKlFsB,SAASI,iBAAiB,oBAAkB,KACfJ,SAASC,cAAc,iBAC/BG,iBAAiB,UAAWN","sources":["src/fetchWikitext.ts","src/fetchLangLink.ts","src/replaceWikitext.ts","src/main.ts"],"sourcesContent":["async function fetchWikitext(articleName: string): Promise<string|null> {\n    /**\n     * parse.js\n     *\n     * MediaWiki API Demos\n     * Demo of `Parse` module: Parse content of a page\n     *\n     * MIT License\n     */\n\n    const url = \"https://en.wikipedia.org/w/api.php?\" +\n        new URLSearchParams({\n            origin: \"*\",\n            action: \"parse\",\n            page: articleName,\n            format: \"json\",\n            prop: 'wikitext',\n        });\n\n    const req = await fetch(url);\n    const json = await req.json();\n    if (!json.parse) {\n        return null;\n    }\n    const wikitext = json.parse.wikitext[\"*\"];\n\n    const redirectArticleName = getRedirect(wikitext)\n    if (redirectArticleName !== null) {\n        return fetchWikitext(redirectArticleName)\n    }\n    return wikitext\n}\n\nfunction getRedirect(wikitext: string) {\n    const match = /#REDIRECT.+\\[\\[(.+)]]/.exec(wikitext)\n    if (match !== null) {\n        return match[1]\n    }\n    return null\n}\n\nexport default fetchWikitext;","async function fetchLangLink(articleName: string): Promise<string|null> {\n    /*\n        langlinks.js\n        MediaWiki API Demos\n        Demo of `Langlinks` module: Get a list of language links that a given page has\n        MIT License\n    */\n\n    const params = {\n        action: \"query\",\n        titles: articleName,\n        prop: \"langlinks\",\n        format: \"json\",\n        lllang: \"ja\",\n    };\n\n    let url = \"https://en.wikipedia.org/w/api.php?origin=*\";\n    Object.keys(params).forEach(function (key) {\n        // @ts-ignore\n        url += \"&\" + key + \"=\" + params[key];\n    });\n\n\n    const req = await fetch(url);\n    const json = await req.json();\n    const pageID = parseInt(Object.keys(json.query.pages)[0])\n    const langlinks = json.query.pages[pageID].langlinks\n    if (!langlinks) {\n        return null;\n    }\n    return langlinks[0]['*']\n}\n\nexport default fetchLangLink;","import fetchLangLink from \"./fetchLangLink\";\n\nfunction findWikiLinks(wikitext: string) {\n    let wikiLinkSet = new Set([...wikitext.matchAll(/\\[\\[(.+?)]]/g)].map(m => m[1])).keys();\n    return [...wikiLinkSet].map(link => link.split('|')).filter(s => s.length <= 2);\n}\n\nexport async function replaceWikitext(wikitext: string) {\n    let replacedWikitext = wikitext\n    const links = findWikiLinks(wikitext);\n    for (const [articleName, label] of links) {\n        if (label) {\n            continue;\n        }\n        const langlink = await fetchLangLink(articleName)\n        const targetRegex = new RegExp(String.raw`\\[\\[${articleName}]]`, 'g');\n        const newWikiLink =\n            langlink === null ? `{{ill|${articleName}|en|${articleName}}}` : `[[${langlink}]]`;\n        replacedWikitext = replacedWikitext.replace(targetRegex, newWikiLink);\n    }\n\n    return replacedWikitext\n}","import fetchWikitext from \"./fetchWikitext\";\nimport fetchLangLink from './fetchLangLink'\nimport {replaceWikitext} from \"./replaceWikitext\";\n\nasync function eventHandler(e: KeyboardEvent) {\n    if (e.key !== 'Enter') {\n        return\n    }\n\n    const articleName = (document.querySelector('#article-name') as HTMLInputElement).value;\n\n    const langLink = await fetchLangLink(articleName);\n    (document.querySelector('#langlink') as HTMLTextAreaElement).value\n        = langLink ? `${articleName} => ${langLink}` : 'not found';\n\n    const wikitext = await fetchWikitext(articleName);\n    (document.querySelector('#wikitext') as HTMLTextAreaElement).value\n        = wikitext ?? 'not found';\n\n    if (wikitext === null) {\n        return;\n    }\n    const replacedWikitext = await replaceWikitext(wikitext);\n    (document.querySelector('#replaced-wikitext') as HTMLTextAreaElement).value = replacedWikitext\n\n\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const articleNameInput = document.querySelector('#article-name') as HTMLInputElement;\n    articleNameInput.addEventListener('keydown', eventHandler);\n})\n"],"names":["$8f2b31e5f3e0b919$export$2e2bcd8739ae039","$8f2b31e5f3e0b919$var$fetchWikitext","articleName","url","URLSearchParams","origin","action","page","format","prop","req","fetch","json","parse","wikitext","redirectArticleName","match","exec","$8f2b31e5f3e0b919$var$getRedirect","$2a6f5bf21508368c$export$2e2bcd8739ae039","params","titles","lllang","Object","keys","forEach","key","pageID","parseInt","query","pages","langlinks","$ef89758e16583508$export$992f817c809bd68c","replacedWikitext","links","Set","matchAll","map","m","link","split","filter","s","length","$ef89758e16583508$var$findWikiLinks","label","langlink","targetRegex","RegExp","String","raw","newWikiLink","replace","$5ba171b4a505aeb2$var$eventHandler","e","document","querySelector","value","langLink","addEventListener"],"version":3,"file":"index.a03931ad.js.map"}